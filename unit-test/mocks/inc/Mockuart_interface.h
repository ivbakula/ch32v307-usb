/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKUART_INTERFACE_H
#define _MOCKUART_INTERFACE_H

#include "unity.h"
#include "uart_interface.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockuart_interface_Init(void);
void Mockuart_interface_Destroy(void);
void Mockuart_interface_Verify(void);




#define uart_enable_device_ExpectAndReturn(dev, pin_config, cmock_retval) uart_enable_device_CMockExpectAndReturn(__LINE__, dev, pin_config, cmock_retval)
void uart_enable_device_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Device dev, UART_PinConfig pin_config, UART_Err cmock_to_return);
#define uart_disable_device_ExpectAndReturn(dev, cmock_retval) uart_disable_device_CMockExpectAndReturn(__LINE__, dev, cmock_retval)
void uart_disable_device_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Device dev, UART_Err cmock_to_return);
#define uart_reset_device_ExpectAndReturn(dev, cmock_retval) uart_reset_device_CMockExpectAndReturn(__LINE__, dev, cmock_retval)
void uart_reset_device_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Device dev, UART_Err cmock_to_return);
#define uart_configure_device_ExpectAndReturn(dev, baud, apbclk, cmock_retval) uart_configure_device_CMockExpectAndReturn(__LINE__, dev, baud, apbclk, cmock_retval)
void uart_configure_device_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Device dev, uint32_t baud, uint32_t apbclk, UART_Err cmock_to_return);
#define uart_putc_Expect(dev, c) uart_putc_CMockExpect(__LINE__, dev, c)
void uart_putc_CMockExpect(UNITY_LINE_TYPE cmock_line, UART_Device dev, char c);
#define uart_getc_ExpectAndReturn(dev, cmock_retval) uart_getc_CMockExpectAndReturn(__LINE__, dev, cmock_retval)
void uart_getc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_Device dev, char cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
